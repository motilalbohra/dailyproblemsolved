class Solution {
    public int numIslands(char[][] grid) {
        int res = 0;
        int n = grid.length, m = grid[0].length;
        int[][] vis = new int[n][m];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == '1' && vis[i][j] == 0){
                    res += 1;
                    dfs(grid, i, j, vis);
                }
            }
        }
        return res;
    }
    public void dfs(char[][] grid, int i, int j,int[][] vis){
        int n = grid.length;
        int m = grid[0].length;
        if((i < 0 || i >= n) || (j < 0 || j >= m)){
            return;
        }
        if(grid[i][j] == '0'){
            return;
        }
        if(vis[i][j] == 1){
            return;
        }
        vis[i][j] = 1;
        dfs(grid, i + 1, j, vis);
        dfs(grid, i - 1, j, vis);
        dfs(grid, i, j + 1, vis);
        dfs(grid, i, j - 1, vis);
    }
}