class Solution {
    public int openLock(String[] deadends, String target) {
        HashSet<String> set = new HashSet<>(Arrays.asList(deadends));
        if(set.contains("0000"))return -1;
        HashSet<String> vis = new HashSet<>();
        vis.add("0000");
        Queue<Pair<String, Integer>> q = new LinkedList<>();
        q.offer(new Pair<>("0000", 0));
        while(!q.isEmpty()){
            String currString = q.peek().getKey();
            Integer moves = q.peek().getValue();
            q.poll();
            if(currString.equals(target)){
                return moves;
            }
            for(int i = 0; i < 4; i++){
                for(int j: new int[]{-1,1}){
                    int a = (currString.charAt(i) - '0' + j + 10) % 10;
                    String newString = currString.substring(0, i) + a
                        + currString.substring(i + 1);
                    if(!vis.contains(newString) && !set.contains(newString)){
                        vis.add(newString);
                        q.offer(new Pair<>(newString, moves + 1));
                    }
                }
            }
        }
        return -1;
    }
}